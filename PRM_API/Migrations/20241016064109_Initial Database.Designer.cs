// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRM_API.Models;

#nullable disable

namespace PRM_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241016064109_Initial Database")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRM_API.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("booking_date");

                    b.Property<int>("ShowtimeId")
                        .HasColumnType("int")
                        .HasColumnName("showtime_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("BookingId");

                    b.HasIndex("ShowtimeId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.BookingFoodBeverage", b =>
                {
                    b.Property<int>("BookingFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_food_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingFoodId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<int>("FoodId")
                        .HasColumnType("int")
                        .HasColumnName("food_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("BookingFoodId");

                    b.HasIndex("BookingId");

                    b.HasIndex("FoodId");

                    b.ToTable("BookingFoodBeverage", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.BookingSeat", b =>
                {
                    b.Property<int>("BookingSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_seat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingSeatId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<string>("BookingSeatStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("booking_seat_status");

                    b.Property<int>("SeatId")
                        .HasColumnType("int")
                        .HasColumnName("seat_id");

                    b.HasKey("BookingSeatId");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingSeat", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.CinemaHall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hall_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallId"));

                    b.Property<string>("HallName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hall_name");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int")
                        .HasColumnName("total_seats");

                    b.HasKey("HallId");

                    b.ToTable("CinemaHall", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.FoodBeverage", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("food_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.HasKey("FoodId");

                    b.ToTable("FoodBeverage", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Genre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("genre");

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("language");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(2, 1)")
                        .HasColumnName("rating");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("release_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("MovieId");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("HallId")
                        .HasColumnType("int")
                        .HasColumnName("hall_id");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("seat_number");

                    b.Property<string>("SeatType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("seat_type");

                    b.HasKey("SeatId");

                    b.HasIndex("HallId");

                    b.ToTable("Seat", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.Showtime", b =>
                {
                    b.Property<int>("ShowtimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("showtime_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowtimeId"));

                    b.Property<int>("HallId")
                        .HasColumnType("int")
                        .HasColumnName("hall_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime")
                        .HasColumnName("show_date");

                    b.HasKey("ShowtimeId");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Showtime", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PRM_API.Models.Booking", b =>
                {
                    b.HasOne("PRM_API.Models.Showtime", "Showtime")
                        .WithMany("Bookings")
                        .HasForeignKey("ShowtimeId")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_Showtime");

                    b.HasOne("PRM_API.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_User");

                    b.Navigation("Showtime");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRM_API.Models.BookingFoodBeverage", b =>
                {
                    b.HasOne("PRM_API.Models.Booking", "Booking")
                        .WithMany("BookingFoodBeverages")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingFoodBeverage_Booking");

                    b.HasOne("PRM_API.Models.FoodBeverage", "Food")
                        .WithMany("BookingFoodBeverages")
                        .HasForeignKey("FoodId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingFoodBeverage_Food");

                    b.Navigation("Booking");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("PRM_API.Models.BookingSeat", b =>
                {
                    b.HasOne("PRM_API.Models.Booking", "Booking")
                        .WithMany("BookingSeats")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_BookingSeat_Booking");

                    b.HasOne("PRM_API.Models.Seat", "Seat")
                        .WithMany("BookingSeats")
                        .HasForeignKey("SeatId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingSeat_Seat");

                    b.Navigation("Booking");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("PRM_API.Models.Seat", b =>
                {
                    b.HasOne("PRM_API.Models.CinemaHall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK_Seat_Hall");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("PRM_API.Models.Showtime", b =>
                {
                    b.HasOne("PRM_API.Models.CinemaHall", "Hall")
                        .WithMany("Showtimes")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK_Showtime_Hall");

                    b.HasOne("PRM_API.Models.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_Showtime_Movie");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("PRM_API.Models.Booking", b =>
                {
                    b.Navigation("BookingFoodBeverages");

                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("PRM_API.Models.CinemaHall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("PRM_API.Models.FoodBeverage", b =>
                {
                    b.Navigation("BookingFoodBeverages");
                });

            modelBuilder.Entity("PRM_API.Models.Movie", b =>
                {
                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("PRM_API.Models.Seat", b =>
                {
                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("PRM_API.Models.Showtime", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("PRM_API.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
